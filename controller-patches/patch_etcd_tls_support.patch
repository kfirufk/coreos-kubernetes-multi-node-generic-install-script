--- controller-install.sh.orig	2016-12-09 19:28:02.000000000 +0000
+++ controller-install.sh	2016-12-09 19:56:39.000000000 +0000
@@ -4,6 +4,24 @@
 # List of etcd servers (http://ip:port), comma separated
 export ETCD_ENDPOINTS=
 
+# Should etcd tls certificates should be enabled to connect to etcd servers
+export ETCD_CLIENT_CERT_AUTH=true
+
+# etcd certificate file
+export ETCD_CERT_FILE="/etc/ssl/etcd/etcd1.pem"
+
+# etcd key file
+export ETCD_KEY_FILE="/etc/ssl/etcd/etcd1-key.pem"
+
+# etcd CA certificate
+export ETCD_TRUSTED_CA_FILE="/etc/ssl/etcd/ca.pem"
+
+# etcd certificates root directory
+export ETCD_CERT_ROOT_DIR="/etc/ssl/etcd"
+
+# etcd scheme
+export ETCD_SCHEME="https"
+
 # Specify the version (vX.Y.Z) of Kubernetes assets to deploy
 export K8S_VER=v1.4.6_coreos.0
 
@@ -67,9 +85,16 @@
         IFS=',' read -ra ES <<< "$ETCD_ENDPOINTS"
         for ETCD in "${ES[@]}"; do
             echo "Trying: $ETCD"
-            if [ -n "$(curl --silent "$ETCD/v2/machines")" ]; then
+            if [ "$ETCD_CLIENT_CERT_AUTH" = true ]; then
+             if [ -n "$(curl --cacert $ETCD_TRUSTED_CA_FILE --key $ETCD_KEY_FILE --cert $ETCD_CERT_FILE --silent "$ETCD/v2/machines")" ]; then
                 local ACTIVE_ETCD=$ETCD
                 break
+             fi
+            else
+             if [ -n "$(curl --silent "$ETCD/v2/machines")" ]; then
+                local ACTIVE_ETCD=$ETCD
+                break
+             fi
             fi
             sleep 1
         done
@@ -77,7 +102,12 @@
             break
         fi
     done
+    RES="";
+    if [ "$ETCD_CLIENT_CERT_AUTH" = true ]; then
+    RES=$(curl --silent --cacert $ETCD_TRUSTED_CA_FILE --key $ETCD_KEY_FILE --cert $ETCD_CERT_FILE -X PUT -d "value={\"Network\":\"$POD_NETWORK\",\"Backend\":{\"Type\":\"vxlan\"}}" "$ACTIVE_ETCD/v2/keys/coreos.com/network/config?prevExist=false")
+    else
     RES=$(curl --silent -X PUT -d "value={\"Network\":\"$POD_NETWORK\",\"Backend\":{\"Type\":\"vxlan\"}}" "$ACTIVE_ETCD/v2/keys/coreos.com/network/config?prevExist=false")
+    fi
     if [ -z "$(echo $RES | grep '"action":"create"')" ] && [ -z "$(echo $RES | grep 'Key already exists')" ]; then
         echo "Unexpected error configuring flannel pod network: $RES"
     fi
@@ -220,6 +250,14 @@
 [Install]
 WantedBy=multi-user.target
 EOF
+        if [ "$ETCD_CLIENT_CERT_AUTH" = true ]; then
+       sed -i "8i PermissionsStartOnly=true" $TEMPLATE
+       sed -i "9i Environment=ETCD_CA_CERT_FILE=$ETCD_TRUSTED_CA_FILE" $TEMPLATE
+       sed -i "10i Environment=ETCD_CERT_FILE=$ETCD_CERT_FILE" $TEMPLATE
+       sed -i "11i Environment=ETCD_KEY_FILE=$ETCD_KEY_FILE" $TEMPLATE
+       sed -i "19i ExecStartPre=/bin/mkdir -p /var/run/calico" $TEMPLATE
+       sed -i -e "20s#.*#ExecStart=/usr/bin/rkt run --inherit-env --stage1-from-dir=stage1-fly.aci  --volume=var-run-calico,kind=host,source=/var/run/calico --volume=modules,kind=host,source=/lib/modules,readOnly=false --mount=volume=modules,target=/lib/modules --volume=dns,kind=host,source=/etc/resolv.conf,readOnly=true --volume=etcd-tls-certs,kind=host,source=$ETCD_CERT_ROOT_DIR,readOnly=true --mount=volume=dns,target=/etc/resolv.conf --mount=volume=etcd-tls-certs,target=/etc/ssl/etcd --mount=volume=var-run-calico,target=/var/run/calico --trust-keys-from-https quay.io/calico/node:${CALICO_NODE_VER}#g" $TEMPLATE
+       fi
     fi
 
     local TEMPLATE=/etc/kubernetes/manifests/kube-proxy.yaml
@@ -321,6 +359,17 @@
       path: /usr/share/ca-certificates
     name: ssl-certs-host
 EOF
+        if [ "$ETCD_CLIENT_CERT_AUTH" = true ]; then
+                sed -i "26i \    - --etcd-cafile=$ETCD_TRUSTED_CA_FILE" $TEMPLATE
+                sed -i "27i \    - --etcd-certfile=$ETCD_CERT_FILE" $TEMPLATE
+                sed -i "28i \    - --etcd-keyfile=$ETCD_KEY_FILE" $TEMPLATE
+                sed -i "44i \    - mountPath: $ETCD_CERT_ROOT_DIR" $TEMPLATE
+                sed -i "45i \      name: etcd-tls-certs" $TEMPLATE
+                sed -i "46i \      readOnly: true" $TEMPLATE
+                sed -i "54i \  - hostPath:" $TEMPLATE
+                sed -i "55i \        path: $ETCD_CERT_ROOT_DIR" $TEMPLATE
+                sed -i "56i \    name: etcd-tls-certs" $TEMPLATE
+        fi
     fi
 
     local TEMPLATE=/etc/kubernetes/manifests/kube-controller-manager.yaml
@@ -437,6 +486,24 @@
         - "--election-namespace=calico-system"
         - "--http=127.0.0.1:4040"
 EOF
+        if [ "$ETCD_CLIENT_CERT_AUTH" = true ]; then
+                sed -i "13i \        - name: ETCD_SCHEME" $TEMPLATE
+                sed -i "14i \          value: $ETCD_SCHEME" $TEMPLATE
+                sed -i "15i \        - name: ETCD_CA_CERT_FILE" $TEMPLATE
+                sed -i "16i \          value: $ETCD_TRUSTED_CA_FILE" $TEMPLATE
+                sed -i "17i \        - name: ETCD_CERT_FILE" $TEMPLATE
+                sed -i "18i \          value: $ETCD_CERT_FILE" $TEMPLATE
+                sed -i "19i \        - name: ETCD_KEY_FILE" $TEMPLATE
+                sed -i "20i \          value: $ETCD_KEY_FILE" $TEMPLATE
+                sed -i "27i \      volumeMounts:" $TEMPLATE
+                sed -i "28i \      - mountPath: $ETCD_CERT_ROOT_DIR" $TEMPLATE
+                sed -i "29i \        name: etcd-tls-certs" $TEMPLATE
+                sed -i "30i \        readOnly: true" $TEMPLATE
+                echo "  volumes:" >> $TEMPLATE
+                echo "   - hostPath:" >> $TEMPLATE
+                echo "         path: $ETCD_CERT_ROOT_DIR" >> $TEMPLATE
+                echo "     name: etcd-tls-certs" >> $TEMPLATE
+        fi
     fi
 
     local TEMPLATE=/srv/kubernetes/manifests/calico-system.json
@@ -773,6 +840,9 @@
 FLANNELD_IFACE=$ADVERTISE_IP
 FLANNELD_ETCD_ENDPOINTS=$ETCD_ENDPOINTS
 EOF
+    if [ "$ETCD_CLIENT_CERT_AUTH" = true ]; then
+    printf "FLANNELD_ETCD_CAFILE=$ETCD_TRUSTED_CA_FILE\nFLANNELD_ETCD_CERTFILE=$ETCD_CERT_FILE\nFLANNELD_ETCD_KEYFILE=$ETCD_KEY_FILE\n" >> $TEMPLATE
+    fi
     fi
 
     local TEMPLATE=/etc/systemd/system/flanneld.service.d/40-ExecStartPre-symlink.conf.conf
@@ -829,6 +899,11 @@
     }
 }
 EOF
+        if [ "$ETCD_CLIENT_CERT_AUTH" = true ]; then
+       sed -i "7i \     \"etcd_key_file\": \"$ETCD_KEY_FILE\"," $TEMPLATE
+       sed -i "8i \     \"etcd_cert_file\": \"$ETCD_CERT_FILE\"," $TEMPLATE
+       sed -i "9i \     \"etcd_ca_cert_file\": \"$ETCD_TRUSTED_CA_FILE\"," $TEMPLATE
+        fi
     fi
 
     local TEMPLATE=/etc/kubernetes/cni/net.d/10-flannel.conf
